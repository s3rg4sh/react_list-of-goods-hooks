{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReversed","default","sortField","setSortField","visibleGoods","goods","preparedGoods","sort","good1","good2","alphabetically","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,qBAAAA,I,mCAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,mBAASH,EAASM,SAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EA/BR,SACEC,EADF,GAGa,IADTH,EACQ,EADRA,UACQ,IADGH,kBACH,SACJO,EAAuB,YAAOD,GAqBpC,OAnBIH,GACFI,EAAcC,MAAK,SAACC,EAAeC,GACjC,OAAQP,GACN,KAAKP,EAASe,eACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXb,GACFO,EAAcO,UAGTP,EAMcQ,CACnBlB,EAAiB,CAAEM,YAAWH,eAGhC,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYf,IAAcP,EAASe,iBAErCQ,QAAS,WACPf,EAAaR,EAASe,iBAN1B,iCAYA,wBACEM,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYf,IAAcP,EAASiB,SAErCM,QAAS,WACPf,EAAaR,EAASiB,SAN1B,4BAYA,wBACEI,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAalB,IAEfmB,QAAS,WACPlB,GAAaD,IANjB,sBAYEG,IAAcP,EAASM,SAAWF,IAEhC,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,EAAaR,EAASM,SACtBD,GAAY,IALhB,sBAaN,6BACGI,EAAae,KAAI,SAACC,GAAD,OAChB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCvHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.31475ab0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  default,\n  alphabetically,\n  length,\n}\n\ntype Params = {\n  sortField: SortType,\n  isReversed: boolean,\n};\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortField, isReversed = false }: Params,\n): string[] {\n  const preparedGoods: string[] = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1: string, good2: string) => {\n      switch (sortField) {\n        case SortType.alphabetically:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortField, setSortField] = useState(SortType.default);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortField, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SortType.alphabetically,\n          })}\n          onClick={() => {\n            setSortField(SortType.alphabetically);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SortType.length,\n          })}\n          onClick={() => {\n            setSortField(SortType.length);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => {\n            setReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== SortType.default || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortField(SortType.default);\n                setReversed(false);\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good: string) => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}